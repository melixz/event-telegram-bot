from apscheduler.schedulers.background import BackgroundScheduler
from apscheduler.triggers.cron import CronTrigger
import asyncio
import pytz
import os

REMINDER_HOUR = int(os.getenv("REMINDER_HOUR", 10))
REMINDER_MINUTE = int(os.getenv("REMINDER_MINUTE", 0))


def start_scheduler(application, send_message_to_all_users):
    scheduler = BackgroundScheduler(timezone=pytz.timezone("Europe/Moscow"))

    async def send_daily_reminder():
        """
        –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
        """
        await send_message_to_all_users(
            application, "–ù–æ–≤—ã–π –¥–µ–Ω—å - –Ω–æ–≤–æ–µ –ø–æ–∂–µ–ª–∞–Ω–∏–µ! –°–∫–æ—Ä–µ–µ –∑–∞–±–∏—Ä–∞–πü§ó"
        )

    def job_wrapper():
        """
        –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ asyncio.
        """
        asyncio.get_event_loop().create_task(send_daily_reminder())

    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á–∏, –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ 10:00 –ø–æ –ú–æ—Å–∫–≤–µ)
    scheduler.add_job(
        job_wrapper,  # –í—ã–∑—ã–≤–∞–µ–º –æ–±–µ—Ä—Ç–∫—É, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –∑–∞–¥–∞—á—É
        CronTrigger(hour=REMINDER_HOUR, minute=REMINDER_MINUTE),
    )
    scheduler.start()
